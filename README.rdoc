= RedisMapper
- a basic ORM for Redis key/value store

by: Francesco 'makevoid' Canessa @ TheFool ( http://thefool.it ) 


NOTE: I'm sorry but this is in early development, it will be changed and documented soon, but feel free to hack it because is very simple. If some specs are failing tell me and we'll add a troubleshooting guide to this readme, thank you.



# create some models
## models.rb 
class Message < RedisMapper
  property :title, :index => true   # enables Message.find
  property :text
  property :user_id                 # connects it to User (atm it doesn't support model's associations via methods but it will be added soon)
end

class User < RedisMapper
  property :name, :index => true
end


## an example mainfile (redismapper_test.rb)
require 'rubygems'
require 'redismapper'

# setup
RedisMapper.setup(Redis.new :db => 14)
@r = RedisMapper.db
p @r.info

# load your models
require 'models'

# insert
u = User.create(:name => "makevoid")
Message.create(:title => "Hello!", :text => "Welcome in the world of redismapper...", :user_id => u.id)
u = User.create(:name => "me")
Message.create(:title => "Hey it's me! I can write messages!", :text => "bla bla..", :user_id => u.id)

# read
puts "messages #{Message.count}:"
Message.all
# Message.all(:select => :title) # faster, fetches only the title
puts

puts "users #{User.count}:"
User.all
puts

puts "Finding a user and his messages"
u = User.find(:name => "me")
# to be implemented
# Message.all(:)

# clean db


## output:

